plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'com.matthewprenger.cursegradle' version '1.4.0'
	id "com.modrinth.minotaur" version "2.+"
}

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

archivesBaseName = project.archives_base_name
version = "${project.mod_version}"
group = project.maven_group

if (file('secrets.gradle').exists()) {
    apply from: 'secrets.gradle'
} else {
	project.ext.curseApiKey   = null
	project.ext.modrinthToken = null
}

loom {
	runs {
		datagen {
			inherit server
			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
			vmArg "-Dfabric-api.datagen.modid=improved-signs"

			runDir "build/datagen"
		}
	}
}

sourceSets {
	main {
		resources {
			srcDirs += [
					'src/main/generated'
			]
		}
	}
}

repositories {
	maven { url 'https://jitpack.io' }
	maven { url = 'https://api.modrinth.com/maven'}
	maven {
		name = "Flemmli97"
		url "https://gitlab.com/api/v4/projects/21830712/packages/maven"
	}
	maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/releases/"
    }
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

	include("maven.modrinth:midnightlib:${project.midnightlib_version}")
	modImplementation("maven.modrinth:midnightlib:${project.midnightlib_version}")

	// modImplementation files("./libs/flan-1.20-1.8.4.3-fabric.jar")

	modRuntimeOnly ("com.terraformersmc:modmenu:${project.modmenu_version}")
}

processResources {
	inputs.property "version", project.mod_version

	filesMatching("fabric.mod.json") {
		expand "version": project.mod_version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"

	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated. 
	withSourcesJar()
}

jar {
	from "LICENSE"
}

curseforge {
	apiKey = curseApiKey
	project {
		id = project.curseforge_id
		changelog = project.changelog
		releaseType = 'release'
		addGameVersion "Fabric"
		addGameVersion "Quilt"
		addGameVersion project.minecraft_version
		relations {
			requiredDependency 'fabric-api'
		}

		mainArtifact(remapJar) {
			displayName = "Improved Signs $project.mod_version"
		}
	}
	options {
		forgeGradleIntegration = false
	}
}
tasks.curseforge.onlyIf {
   curseApiKey
}

modrinth {
	syncBodyFrom = rootProject.file("README.md").text
	token = modrinthToken
	projectId = project.modrinth_id
	versionName = "Improved Signs $project.mod_version for MC $project.minecraft_version"
	versionNumber = project.mod_version
	versionType = 'RELEASE'
	uploadFile = remapJar
	changelog = project.changelog
	gameVersions = [project.minecraft_version]
	loaders = ['fabric','quilt']
	dependencies {
        required.project "fabric-api"
    }
}
tasks.modrinth.onlyIf {
   modrinthToken
}